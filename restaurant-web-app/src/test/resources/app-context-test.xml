<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Use spring servlet for all requests, including static resources -->
    <mvc:default-servlet-handler/>

    <!-- Use @MVC annotations -->
    <mvc:annotation-driven/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Component scan for @Controller, @Service... annotations -->
    <context:component-scan base-package="com.epam.brest.courses.*"/>

    <import resource="classpath*:test-db.xml"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <value>classpath:dao.properties</value>
            </list>
        </property>
    </bean>

    <bean id="orderController" class="com.epam.brest.courses.web_app.OrderController">
        <constructor-arg index="0" ref="orderService"/>
        <constructor-arg index="1" ref="itemService"/>
        <constructor-arg index="2" ref="positionService"/>
    </bean>

    <bean id="itemController" class="com.epam.brest.courses.web_app.ItemController">
        <constructor-arg index="0" ref="itemService"/>
    </bean>

    <bean id="itemService" class="com.epam.brest.courses.service.ItemServiceImpl">
        <constructor-arg ref="itemDao"/>
    </bean>

    <bean id="itemDao" class="com.epam.brest.courses.dao.ItemDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="orderService" class="com.epam.brest.courses.service.OrderServiceImpl">
        <constructor-arg ref="orderDao"/>
    </bean>

    <bean id="positionService" class="com.epam.brest.courses.service.PositionServiceImpl">
        <constructor-arg ref="positionDao"/>
    </bean>

    <bean id="orderDao" class="com.epam.brest.courses.dao.OrderDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="positionDao" class="com.epam.brest.courses.dao.PositionDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>


<!--    &lt;!&ndash; Thymeleaf Template Resolver &ndash;&gt;-->
<!--    <bean id="templateResolver"-->
<!--          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">-->
<!--        <property name="prefix" value="/resources/templates/" />-->
<!--        <property name="suffix" value=".html" />-->
<!--        <property name="templateMode" value="HTML" />-->
<!--        &lt;!&ndash; Template cache is true by default. Set to false if you want             &ndash;&gt;-->
<!--        &lt;!&ndash; templates to be automatically updated when modified.                    &ndash;&gt;-->
<!--        <property name="cacheable" value="false" />-->
<!--    </bean>-->

<!--    &lt;!&ndash; Thymeleaf Template Engine (Spring5-specific version) &ndash;&gt;-->
<!--    <bean id="templateEngine"-->
<!--          class="org.thymeleaf.spring5.SpringTemplateEngine">-->
<!--        <property name="templateResolvers">-->
<!--            <set>-->
<!--                <ref bean="templateResolver" />-->
<!--            </set>-->
<!--        </property>-->
<!--    </bean>-->

<!--    &lt;!&ndash; Thymeleaf View Resolver - implementation of Spring's ViewResolver interface &ndash;&gt;-->
<!--    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">-->
<!--        <property name="templateEngine" ref="templateEngine" />-->
<!--        <property name="characterEncoding" value="UTF-8" />-->
<!--    </bean>-->

<!--    <bean id="messageSource"-->
<!--          class="org.springframework.context.support.ReloadableResourceBundleMessageSource"-->
<!--          p:basename="/WEB-INF/messages">-->
<!--    </bean>-->

</beans>